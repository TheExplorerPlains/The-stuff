 do local Players=game:GetService("Players");local RunService=game:GetService("RunService");local Workspace=game:GetService("Workspace");local ReplicatedStorage=game:GetService("ReplicatedStorage");local UserInputService=game:GetService("UserInputService");local task=task;local BUG_ASSET_ID=41324945;local BUG_ASSET_UID="{99ab22df-ca29-4143-a2fd-Oa1b79db78c2}";local DEFAULT_RADIUS=25;local DEFAULT_SPEED=100;local CHECK_INTERVAL=0.08;local Remotes=ReplicatedStorage:WaitForChild("Remotes");local StampAsset=Remotes:FindFirstChild("StampAsset");local DeleteAsset=Remotes:FindFirstChild("DeleteAsset");local LPlayer=Players.LocalPlayer;local LPlate,ActiveParts;do local plates=Workspace:WaitForChild("Plates");for _,pf in ipairs(plates:GetChildren()) do if (pf:FindFirstChild("Owner") and (pf.Owner.Value==LPlayer)) then LPlate=pf:FindFirstChild("Plate");ActiveParts=pf:FindFirstChild("ActiveParts");break;end end end assert(LPlate and ActiveParts ,"InfinityAura: could not find local Plate/ActiveParts");local NORMAL_COLOR=Color3.fromRGB(173,216,230);local PULL_COLOR=Color3.fromRGB(160,32,240);local PSPEED_COLOR=Color3.fromRGB(200,200,120);local KILL_COLOR=Color3.fromRGB(220,40,40);local Enabled=true;local LocalMode="PUSH";local LocalRadius=DEFAULT_RADIUS;local EFFECT_SPEED=DEFAULT_SPEED;local LocalPS_WALK=8;local LocalPS_JUMP=30;local ActiveEffect={};local AssignedAuras={};local AuraPart=nil;local HUTBOX_NAME="HutBox";local HUT_PART_NAME="Part";local RETURN_POS=Vector3.new(0, -50,0);local HUT_RETURN_DELAY=0.6;local SAFE_DISTANCE=6;local cachedHutPart=nil;local currentUseId=0;local function findSingleHutPart() if (cachedHutPart and cachedHutPart.Parent) then return cachedHutPart;end local hut=Workspace:FindFirstChild(HUTBOX_NAME);if  not hut then return nil;end for _,inst in ipairs(hut:GetDescendants()) do if ((inst.Name==HUT_PART_NAME) and inst:IsA("BasePart")) then cachedHutPart=inst;return inst;end end return nil;end local function enforceHutPartShape(part) if  not part then return;end pcall(function() part.Size=Vector3.new(0.5,0.5,0.5);part.Transparency=1;part.CanCollide=false;part.Anchored=true;end);end local function teleportHutPartToPlayer(plr,delayBeforeReturn) delayBeforeReturn=delayBeforeReturn or HUT_RETURN_DELAY ;local part=findSingleHutPart();if  not part then return;end enforceHutPartShape(part);if ( not plr or  not plr.Character) then return;end local targetHRP=plr.Character:FindFirstChild("HumanoidRootPart");if  not targetHRP then return;end currentUseId=currentUseId + 1 ;local myUseId=currentUseId;local returned=false;pcall(function() part.CFrame=targetHRP.CFrame;end);local proxConn;proxConn=RunService.Heartbeat:Connect(function() if (returned or (myUseId~=currentUseId)) then if proxConn then proxConn:Disconnect();end return;end local myChar=LPlayer.Character;local myHRP=myChar and myChar:FindFirstChild("HumanoidRootPart") ;if  not myHRP then return;end local ok,dist=pcall(function() return (myHRP.Position-part.Position).Magnitude;end);if (ok and dist and (dist<=SAFE_DISTANCE)) then returned=true;if (myUseId==currentUseId) then pcall(function() part.CFrame=CFrame.new(RETURN_POS);enforceHutPartShape(part);end);end if proxConn then proxConn:Disconnect();end end end);task.delay(delayBeforeReturn,function() if (returned or (myUseId~=currentUseId)) then if (proxConn and proxConn.Connected) then proxConn:Disconnect();end return;end returned=true;if (myUseId==currentUseId) then pcall(function() part.CFrame=CFrame.new(RETURN_POS);enforceHutPartShape(part);end);end if (proxConn and proxConn.Connected) then proxConn:Disconnect();end end);end local function safeStamp(assetId,cframe,uniqueId,attachList,orient) if  not StampAsset then return false;end local ok,res=pcall(function() return StampAsset:InvokeServer(assetId,cframe,uniqueId,attachList or {} ,orient or 1 );end);if  not ok then warn("InfinityAura: StampAsset failed:",res);end return ok;end local function safeDelete(modelInstance) if  not DeleteAsset then return false;end local ok,res=pcall(function() return DeleteAsset:InvokeServer(modelInstance);end);if  not ok then warn("InfinityAura: DeleteAsset failed:",res);end return ok;end local function waitForNewPart(beforeList,timeout) timeout=timeout or 2 ;local deadline=tick() + timeout ;while tick()<deadline  do for _,obj in ipairs(ActiveParts:GetChildren()) do if  not table.find(beforeList,obj) then local basePart=(obj:IsA("BasePart") and obj) or obj:FindFirstChildWhichIsA("BasePart") ;if basePart then pcall(function() basePart.CanCollide=false;end);return obj;end end end RunService.Heartbeat:Wait();end return nil;end local function stampOn(hrp) if  not hrp then return nil;end local before=ActiveParts:GetChildren();local ok=safeStamp(BUG_ASSET_ID,LPlate.CFrame + Vector3.new(0, -2e+21,0) ,BUG_ASSET_UID,{hrp},0);if  not ok then return nil;end return waitForNewPart(before,3);end local function makeAuraVisualForHRP(hrp,radius,color) if  not hrp then return nil;end local part=Instance.new("Part");part.Name="InfinityAura_Visual";part.Shape=Enum.PartType.Ball;part.Size=Vector3.new(radius * 2 ,radius * 2 ,radius * 2 );part.Material=Enum.Material.ForceField;part.Color=color or NORMAL_COLOR ;part.Transparency=0.35;part.Anchored=false;part.CanCollide=false;part.Massless=true;part.CFrame=hrp.CFrame;part.Parent=Workspace;local weld=Instance.new("WeldConstraint",part);weld.Part0=hrp;weld.Part1=part;return part;end local function updateAuraVisualColor(part,color) if (part and part.Parent) then part.Color=color;end end local function resizeAuraVisual(part,radius) if (part and part.Parent) then part.Size=Vector3.new(radius * 2 ,radius * 2 ,radius * 2 );end end local function createLocalAura() if (AuraPart and AuraPart.Parent) then AuraPart:Destroy();end local char=LPlayer.Character;if  not char then return;end local hrp=char:FindFirstChild("HumanoidRootPart");if  not hrp then return;end local color=((LocalMode=="PULL") and PULL_COLOR) or ((LocalMode=="PSpeed") and PSPEED_COLOR) or ((LocalMode=="KILL") and KILL_COLOR) or NORMAL_COLOR ;AuraPart=makeAuraVisualForHRP(hrp,LocalRadius,color);end local function destroyLocalAura() if (AuraPart and AuraPart.Parent) then AuraPart:Destroy();end AuraPart=nil;end local function ensureAssignedCharConn(owner) if  not owner then return;end local data=AssignedAuras[owner];if  not data then return;end if (data.charConn and data.charConn.Connected) then return;end data.charConn=owner.CharacterAdded:Connect(function(char) task.wait(0.12);if (data.enabled and char) then local hrp=char:FindFirstChild("HumanoidRootPart");if hrp then local color=((data.mode=="PULL") and PULL_COLOR) or ((data.mode=="PSpeed") and PSPEED_COLOR) or ((data.mode=="KILL") and KILL_COLOR) or NORMAL_COLOR ;local part=makeAuraVisualForHRP(hrp,data.radius,color);data.auraPart=part;end end end);end local function createAssignedAura(owner,radius,mode,enabled,psWalk,psJump) if ( not owner or  not owner.Character) then return;end local hrp=owner.Character:FindFirstChild("HumanoidRootPart");if  not hrp then return;end local color=((mode=="PULL") and PULL_COLOR) or ((mode=="PSpeed") and PSPEED_COLOR) or ((mode=="KILL") and KILL_COLOR) or NORMAL_COLOR ;local part=makeAuraVisualForHRP(hrp,radius,color);AssignedAuras[owner]={auraPart=part,radius=radius,mode=mode,enabled=enabled~=false ,psWalk=psWalk or 8 ,psJump=psJump or 30 ,charConn=nil};ensureAssignedCharConn(owner);end local function removeAssignedAura(owner) if  not owner then return;end local data=AssignedAuras[owner];if  not data then return;end if (data.auraPart and data.auraPart.Parent) then data.auraPart:Destroy();end if (data.charConn and data.charConn.Connected) then pcall(function() data.charConn:Disconnect();end);end AssignedAuras[owner]=nil;local sKey="assigned_"   .. tostring(owner.UserId) ;for t,ed in pairs(ActiveEffect) do if (ed and (ed.sourceKey==sKey)) then if (ed.model and  not ed.persistent) then pcall(safeDelete,ed.model);end if (ed.bv and ed.bv.Parent) then ed.bv:Destroy();end if (ed.humanoid and ed.psOrig) then if ed.humanoid.Parent then ed.humanoid.WalkSpeed=ed.psOrig.walk or ed.humanoid.WalkSpeed ;ed.humanoid.JumpPower=ed.psOrig.jump or ed.humanoid.JumpPower ;end end ActiveEffect[t]=nil;end end end local function removeActiveEffect(target) local d=ActiveEffect[target];if  not d then return;end if (d.model and  not d.persistent) then pcall(safeDelete,d.model);end if (d.bv and d.bv.Parent) then d.bv:Destroy();end if (d.humanoid and d.psOrig) then if d.humanoid.Parent then d.humanoid.WalkSpeed=d.psOrig.walk or d.humanoid.WalkSpeed ;d.humanoid.JumpPower=d.psOrig.jump or d.humanoid.JumpPower ;end end if d.toolConns then for _,c in ipairs(d.toolConns) do if (c and c.Connected) then pcall(function() c:Disconnect();end);end end end ActiveEffect[target]=nil;end local function doGuaranteedHutKill(target) if ( not target or  not target.Character) then return;end local hrp=target.Character:FindFirstChild("HumanoidRootPart");if  not hrp then return;end local created=stampOn(hrp);pcall(function() teleportHutPartToPlayer(target,HUT_RETURN_DELAY);end);local humanoid=target.Character:FindFirstChildOfClass("Humanoid");if humanoid then pcall(function() humanoid.Health=0;end);end return created;end local function applyEffectFromSource(target,sourceKey,auraPart,mode,psWalk,psJump) if ActiveEffect[target] then return;end if ( not target or  not auraPart) then return;end if ((target==LPlayer) and (sourceKey~="local")) then return;end local char=target.Character;if  not char then return;end local hrp=char:FindFirstChild("HumanoidRootPart");if  not hrp then return;end if (mode=="PSpeed") then local humanoid=char:FindFirstChildOfClass("Humanoid");local orig=nil;if humanoid then orig={walk=humanoid.WalkSpeed,jump=humanoid.JumpPower};humanoid.WalkSpeed=tonumber(psWalk) or humanoid.WalkSpeed ;humanoid.JumpPower=tonumber(psJump) or humanoid.JumpPower ;end local addedConn,removedConn;if char then addedConn=char.DescendantAdded:Connect(function(inst) if inst:IsA("Tool") then removeActiveEffect(target);end end);removedConn=char.DescendantRemoving:Connect(function(inst) if inst:IsA("Tool") then removeActiveEffect(target);end end);end ActiveEffect[target]={sourceKey=sourceKey,model=stampOn(hrp),bv=nil,humanoid=humanoid,psOrig=orig,toolConns={addedConn,removedConn},auraPart=auraPart,persistent=false};return;end if (mode=="KILL") then local created=doGuaranteedHutKill(target);ActiveEffect[target]={sourceKey=sourceKey,model=created,bv=nil,humanoid=nil,psOrig=nil,toolConns=nil,auraPart=auraPart,persistent=true};return;end local bv=Instance.new("BodyVelocity");bv.MaxForce=Vector3.new(100000,100000,100000);bv.P=1000;bv.Parent=hrp;ActiveEffect[target]={sourceKey=sourceKey,model=stampOn(hrp),bv=bv,humanoid=nil,psOrig=nil,toolConns=nil,auraPart=auraPart,persistent=false};if char then local addedConn=char.DescendantAdded:Connect(function(inst) if inst:IsA("Tool") then removeActiveEffect(target);end end);local removedConn=char.DescendantRemoving:Connect(function(inst) if inst:IsA("Tool") then removeActiveEffect(target);end end);local cur=ActiveEffect[target];if cur then cur.toolConns={addedConn,removedConn};end end end local checkingThread;local function startChecking() if checkingThread then return;end checkingThread=task.spawn(function() while Enabled do if ( not AuraPart and LPlayer.Character) then createLocalAura();end local sources={};if (AuraPart and AuraPart.Parent and LocalRadius and LocalMode) then sources["local"]={pos=AuraPart.Position,radius=LocalRadius,owner=LPlayer,auraPart=AuraPart,mode=LocalMode,enabled=true,psWalk=LocalPS_WALK,psJump=LocalPS_JUMP};end for owner,info in pairs(AssignedAuras) do if (info and info.auraPart and info.auraPart.Parent and info.enabled) then local key="assigned_"   .. tostring(owner.UserId) ;sources[key]={pos=info.auraPart.Position,radius=info.radius,owner=owner,auraPart=info.auraPart,mode=info.mode,enabled=info.enabled,psWalk=info.psWalk,psJump=info.psJump};end end for _,target in ipairs(Players:GetPlayers()) do if target.Character then local hrp=target.Character:FindFirstChild("HumanoidRootPart");if hrp then local cur=ActiveEffect[target];if cur then local s=sources[cur.sourceKey];if  not s then removeActiveEffect(target);else local d=(hrp.Position-s.pos).Magnitude;if (d>s.radius) then removeActiveEffect(target);end end else for skey,sdata in pairs(sources) do if (sdata.owner~=target) then local d=(hrp.Position-sdata.pos).Magnitude;if (d<=sdata.radius) then if  not ActiveEffect[target] then applyEffectFromSource(target,skey,sdata.auraPart,sdata.mode,sdata.psWalk,sdata.psJump);end break;end end end end end end end for target,d in pairs(ActiveEffect) do if (d and d.bv and d.bv.Parent and d.auraPart and d.auraPart.Parent) then local hrp=d.bv.Parent;if (hrp and hrp.Position) then local srcKey=d.sourceKey;local mode=nil;if (srcKey=="local") then mode=LocalMode;else local id=tonumber(string.match(srcKey,"assigned_(%d+)"));if id then for owner,info in pairs(AssignedAuras) do if (owner.UserId==id) then mode=info.mode;break;end end end end mode=mode or "PUSH" ;local dir=((mode=="PUSH") and (hrp.Position-d.auraPart.Position)) or (d.auraPart.Position-hrp.Position) ;if (dir.Magnitude<=0.0001) then d.bv.Velocity=Vector3.zero;else d.bv.Velocity=dir.Unit * EFFECT_SPEED ;end else removeActiveEffect(target);end elseif (d and d.humanoid and d.humanoid.Parent) then local srcKey=d.sourceKey;local psw,psj=nil,nil;if (srcKey=="local") then psw,psj=LocalPS_WALK,LocalPS_JUMP;else local id=tonumber(string.match(srcKey,"assigned_(%d+)"));if id then for owner,info in pairs(AssignedAuras) do if (owner.UserId==id) then psw,psj=info.psWalk,info.psJump;break;end end end end if (psw and psj and d.humanoid.Parent) then d.humanoid.WalkSpeed=tonumber(psw) or d.humanoid.WalkSpeed ;d.humanoid.JumpPower=tonumber(psj) or d.humanoid.JumpPower ;end elseif (d and  not d.persistent) then removeActiveEffect(target);end end task.wait(CHECK_INTERVAL);end checkingThread=nil;end);end local function stopCheckingAndClear() Enabled=false;for t,_ in pairs(ActiveEffect) do removeActiveEffect(t);end destroyLocalAura();for owner,info in pairs(AssignedAuras) do if (info.auraPart and info.auraPart.Parent) then info.auraPart:Destroy();end if (info.charConn and info.charConn.Connected) then pcall(function() info.charConn:Disconnect();end);end end AssignedAuras={};end local function setLocalMode(newMode) LocalMode=newMode or LocalMode ;if (AuraPart and AuraPart.Parent) then local color=((LocalMode=="PULL") and PULL_COLOR) or ((LocalMode=="PSpeed") and PSPEED_COLOR) or ((LocalMode=="KILL") and KILL_COLOR) or NORMAL_COLOR ;updateAuraVisualColor(AuraPart,color);end end local function setLocalRadius(r) LocalRadius=math.max(1,tonumber(r) or LocalRadius );if (AuraPart and AuraPart.Parent) then resizeAuraVisual(AuraPart,LocalRadius);end end local function setLocalPSValues(walk,jump) LocalPS_WALK=tonumber(walk) or LocalPS_WALK ;LocalPS_JUMP=tonumber(jump) or LocalPS_JUMP ;end local function giveAuraToPlayer(playerObj,radius,mode,enabled,psWalk,psJump) if  not playerObj then return;end if AssignedAuras[playerObj] then AssignedAuras[playerObj].radius=radius or AssignedAuras[playerObj].radius ;AssignedAuras[playerObj].mode=mode or AssignedAuras[playerObj].mode ;AssignedAuras[playerObj].enabled=((enabled==nil) and true) or enabled ;AssignedAuras[playerObj].psWalk=psWalk or AssignedAuras[playerObj].psWalk ;AssignedAuras[playerObj].psJump=psJump or AssignedAuras[playerObj].psJump ;if (AssignedAuras[playerObj].auraPart and AssignedAuras[playerObj].auraPart.Parent) then updateAuraVisualColor(AssignedAuras[playerObj].auraPart,((AssignedAuras[playerObj].mode=="PULL") and PULL_COLOR) or ((AssignedAuras[playerObj].mode=="PSpeed") and PSPEED_COLOR) or ((AssignedAuras[playerObj].mode=="KILL") and KILL_COLOR) or NORMAL_COLOR );resizeAuraVisual(AssignedAuras[playerObj].auraPart,AssignedAuras[playerObj].radius);end else createAssignedAura(playerObj,radius or LocalRadius ,mode or "PUSH" ,enabled,psWalk or 8 ,psJump or 30 );end ensureAssignedCharConn(playerObj);end local function toggleAssignedEnabled(playerObj,onOrNil) if ( not playerObj or  not AssignedAuras[playerObj]) then return;end AssignedAuras[playerObj].enabled=((onOrNil==nil) and  not AssignedAuras[playerObj].enabled) or onOrNil ;if  not AssignedAuras[playerObj].enabled then local sKey="assigned_"   .. tostring(playerObj.UserId) ;for t,ed in pairs(ActiveEffect) do if (ed and (ed.sourceKey==sKey)) then removeActiveEffect(t);end end end end local function setAssignedMode(playerObj,newMode) if ( not playerObj or  not AssignedAuras[playerObj]) then return;end AssignedAuras[playerObj].mode=newMode or AssignedAuras[playerObj].mode ;local color=((AssignedAuras[playerObj].mode=="PULL") and PULL_COLOR) or ((AssignedAuras[playerObj].mode=="PSpeed") and PSPEED_COLOR) or ((AssignedAuras[playerObj].mode=="KILL") and KILL_COLOR) or NORMAL_COLOR ;if (AssignedAuras[playerObj].auraPart and AssignedAuras[playerObj].auraPart.Parent) then updateAuraVisualColor(AssignedAuras[playerObj].auraPart,color);end end local function setAssignedPSValues(playerObj,walk,jump) if ( not playerObj or  not AssignedAuras[playerObj]) then return;end AssignedAuras[playerObj].psWalk=tonumber(walk) or AssignedAuras[playerObj].psWalk ;AssignedAuras[playerObj].psJump=tonumber(jump) or AssignedAuras[playerObj].psJump ;end if Enabled then if LPlayer.Character then createLocalAura();end startChecking();end LPlayer.CharacterAdded:Connect(function() task.wait(0.12);if Enabled then createLocalAura();end end);Players.PlayerRemoving:Connect(function(pl) if AssignedAuras[pl] then removeAssignedAura(pl);end for t,d in pairs(ActiveEffect) do if (d and (d.sourceKey==("assigned_"   .. tostring(pl.UserId)))) then removeActiveEffect(t);end end end);local playerGui=LPlayer:WaitForChild("PlayerGui");local ui=Instance.new("ScreenGui",playerGui);ui.Name="InfinityAura_UI_PS";ui.ResetOnSpawn=false;local openBtn=Instance.new("TextButton",ui);openBtn.Name="OpenButton";openBtn.Size=UDim2.new(0,36,0,36);openBtn.AnchorPoint=Vector2.new(0.5,0);openBtn.Position=UDim2.new(0.5,0,0.06,0);openBtn.BackgroundColor3=Color3.fromRGB(35,38,45);openBtn.Text="∞";openBtn.Font=Enum.Font.GothamBold;openBtn.TextSize=18;openBtn.TextColor3=Color3.fromRGB(230,230,230);Instance.new("UICorner",openBtn).CornerRadius=UDim.new(0,8);openBtn.Visible=true;local frame=Instance.new("Frame",ui);frame.Name="MainFrame";frame.Size=UDim2.new(0,380,0,380);frame.Position=UDim2.new(0.5, -190,0.14,0);frame.BackgroundColor3=Color3.fromRGB(20,22,26);frame.Visible=false;Instance.new("UICorner",frame).CornerRadius=UDim.new(0,12);local titleBar=Instance.new("Frame",frame);titleBar.Size=UDim2.new(1,0,0,36);titleBar.Position=UDim2.new(0,0,0,0);titleBar.BackgroundColor3=Color3.fromRGB(30,32,36);Instance.new("UICorner",titleBar).CornerRadius=UDim.new(0,12);local titleLabel=Instance.new("TextLabel",titleBar);titleLabel.Size=UDim2.new(1, -120,1,0);titleLabel.Position=UDim2.new(0,12,0,0);titleLabel.BackgroundTransparency=1;titleLabel.Text="InfinityV2";titleLabel.Font=Enum.Font.GothamBold;titleLabel.TextSize=16;titleLabel.TextColor3=Color3.fromRGB(225,225,225);titleLabel.TextXAlignment=Enum.TextXAlignment.Left;local minimizeBtn=Instance.new("TextButton",titleBar);minimizeBtn.Size=UDim2.new(0,36,0,26);minimizeBtn.Position=UDim2.new(1, -46,0,5);minimizeBtn.BackgroundColor3=Color3.fromRGB(200,50,50);minimizeBtn.Text="–";minimizeBtn.Font=Enum.Font.GothamBold;minimizeBtn.TextSize=16;minimizeBtn.TextColor3=Color3.new(1,1,1);Instance.new("UICorner",minimizeBtn).CornerRadius=UDim.new(0,6);local tabs=Instance.new("Frame",frame);tabs.Size=UDim2.new(1, -16,0,36);tabs.Position=UDim2.new(0,8,0,40);tabs.BackgroundTransparency=1;local function makeTab(text,x) local b=Instance.new("TextButton",tabs);b.Size=UDim2.new(0,120,1,0);b.Position=UDim2.new(0,8 + (x * 126) ,0,0);b.Text=text;b.Font=Enum.Font.GothamSemibold;b.TextSize=14;b.BackgroundColor3=Color3.fromRGB(40,42,48);b.TextColor3=Color3.fromRGB(220,220,220);Instance.new("UICorner",b).CornerRadius=UDim.new(0,8);return b;end local homeTabBtn=makeTab("Home",0);local playersTabBtn=makeTab("Players",1);local content=Instance.new("Frame",frame);content.Size=UDim2.new(1, -16,1, -120);content.Position=UDim2.new(0,8,0,80);content.BackgroundTransparency=1;local homePage=Instance.new("Frame",content);homePage.Size=UDim2.new(1,0,1,0);homePage.BackgroundTransparency=1;local playersPage=Instance.new("Frame",content);playersPage.Size=UDim2.new(1,0,1,0);playersPage.BackgroundTransparency=1;playersPage.Visible=false;local lblStatus=Instance.new("TextLabel",homePage);lblStatus.Size=UDim2.new(1,0,0,22);lblStatus.Position=UDim2.new(0,0,0,6);lblStatus.BackgroundTransparency=1;lblStatus.Font=Enum.Font.Gotham;lblStatus.TextSize=14;lblStatus.TextColor3=Color3.fromRGB(200,200,200);lblStatus.Text=(Enabled and ("Local: ON — Mode: "   .. LocalMode)) or "Local: OFF" ;local toggleLocalBtn=Instance.new("TextButton",homePage);toggleLocalBtn.Size=UDim2.new(0.5, -8,0,36);toggleLocalBtn.Position=UDim2.new(0,0,0,36);toggleLocalBtn.BackgroundColor3=Color3.fromRGB(52,54,62);toggleLocalBtn.Font=Enum.Font.GothamSemibold;toggleLocalBtn.TextSize=14;toggleLocalBtn.TextColor3=Color3.fromRGB(235,235,235);toggleLocalBtn.Text=(Enabled and "Disable Local Aura") or "Enable Local Aura" ;Instance.new("UICorner",toggleLocalBtn).CornerRadius=UDim.new(0,8);local localModeBtn=Instance.new("TextButton",homePage);localModeBtn.Size=UDim2.new(0.5, -8,0,36);localModeBtn.Position=UDim2.new(0.5,8,0,36);localModeBtn.BackgroundColor3=Color3.fromRGB(52,54,62);localModeBtn.Font=Enum.Font.GothamSemibold;localModeBtn.TextSize=14;localModeBtn.TextColor3=Color3.fromRGB(235,235,235);localModeBtn.Text="Mode: "   .. LocalMode ;Instance.new("UICorner",localModeBtn).CornerRadius=UDim.new(0,8);local radiusLabel=Instance.new("TextLabel",homePage);radiusLabel.Size=UDim2.new(0.45,0,0,24);radiusLabel.Position=UDim2.new(0,0,0,86);radiusLabel.BackgroundTransparency=1;radiusLabel.Font=Enum.Font.Gotham;radiusLabel.TextSize=13;radiusLabel.TextColor3=Color3.fromRGB(200,200,200);radiusLabel.Text="Local Radius:";local radiusBox=Instance.new("TextBox",homePage);radiusBox.Size=UDim2.new(0.45,0,0,24);radiusBox.Position=UDim2.new(0.5,8,0,86);radiusBox.BackgroundColor3=Color3.fromRGB(40,40,45);radiusBox.TextColor3=Color3.fromRGB(220,220,220);radiusBox.Font=Enum.Font.Gotham;radiusBox.TextSize=13;radiusBox.ClearTextOnFocus=false;radiusBox.Text=tostring(LocalRadius);Instance.new("UICorner",radiusBox).CornerRadius=UDim.new(0,6);local psWalkLabel=Instance.new("TextLabel",homePage);psWalkLabel.Size=UDim2.new(0.45,0,0,20);psWalkLabel.Position=UDim2.new(0,0,0,118);psWalkLabel.BackgroundTransparency=1;psWalkLabel.Font=Enum.Font.Gotham;psWalkLabel.TextSize=13;psWalkLabel.TextColor3=Color3.fromRGB(200,200,200);psWalkLabel.Text="PSpeed Walk:";local psWalkBox=Instance.new("TextBox",homePage);psWalkBox.Size=UDim2.new(0.45,0,0,20);psWalkBox.Position=UDim2.new(0.5,8,0,118);psWalkBox.BackgroundColor3=Color3.fromRGB(40,40,45);psWalkBox.TextColor3=Color3.fromRGB(220,220,220);psWalkBox.Font=Enum.Font.Gotham;psWalkBox.TextSize=13;psWalkBox.ClearTextOnFocus=false;psWalkBox.Text=tostring(LocalPS_WALK);Instance.new("UICorner",psWalkBox).CornerRadius=UDim.new(0,6);local psJumpLabel=Instance.new("TextLabel",homePage);psJumpLabel.Size=UDim2.new(0.45,0,0,20);psJumpLabel.Position=UDim2.new(0,0,0,146);psJumpLabel.BackgroundTransparency=1;psJumpLabel.Font=Enum.Font.Gotham;psJumpLabel.TextSize=13;psJumpLabel.TextColor3=Color3.fromRGB(200,200,200);psJumpLabel.Text="PSpeed Jump:";local psJumpBox=Instance.new("TextBox",homePage);psJumpBox.Size=UDim2.new(0.45,0,0,20);psJumpBox.Position=UDim2.new(0.5,8,0,146);psJumpBox.BackgroundColor3=Color3.fromRGB(40,40,45);psJumpBox.TextColor3=Color3.fromRGB(220,220,220);psJumpBox.Font=Enum.Font.Gotham;psJumpBox.TextSize=13;psJumpBox.ClearTextOnFocus=false;psJumpBox.Text=tostring(LocalPS_JUMP);Instance.new("UICorner",psJumpBox).CornerRadius=UDim.new(0,6);local playersList=Instance.new("ScrollingFrame",playersPage);playersList.Size=UDim2.new(0.48, -8,1, -8);playersList.Position=UDim2.new(0,0,0,4);playersList.BackgroundColor3=Color3.fromRGB(28,30,34);playersList.BorderSizePixel=0;playersList.ScrollBarThickness=6;Instance.new("UICorner",playersList).CornerRadius=UDim.new(0,8);local playersLayout=Instance.new("UIListLayout",playersList);playersLayout.Padding=UDim.new(0,6);playersLayout.SortOrder=Enum.SortOrder.LayoutOrder;local playerControl=Instance.new("Frame",playersPage);playerControl.Size=UDim2.new(0.5, -8,1, -8);playerControl.Position=UDim2.new(0.5,8,0,4);playerControl.BackgroundTransparency=1;local selLabel=Instance.new("TextLabel",playerControl);selLabel.Size=UDim2.new(1,0,0,22);selLabel.Position=UDim2.new(0,0,0,6);selLabel.BackgroundTransparency=1;selLabel.Font=Enum.Font.GothamBold;selLabel.TextSize=14;selLabel.TextColor3=Color3.fromRGB(220,220,220);selLabel.Text="Selected: none";local giveBtn=Instance.new("TextButton",playerControl);giveBtn.Size=UDim2.new(1,0,0,36);giveBtn.Position=UDim2.new(0,0,0,38);giveBtn.BackgroundColor3=Color3.fromRGB(60,140,60);giveBtn.Text="Give Aura";giveBtn.Font=Enum.Font.GothamSemibold;Instance.new("UICorner",giveBtn).CornerRadius=UDim.new(0,8);local removeBtn=Instance.new("TextButton",playerControl);removeBtn.Size=UDim2.new(1,0,0,36);removeBtn.Position=UDim2.new(0,0,0,84);removeBtn.BackgroundColor3=Color3.fromRGB(180,70,70);removeBtn.Text="Remove Aura";removeBtn.Font=Enum.Font.GothamSemibold;Instance.new("UICorner",removeBtn).CornerRadius=UDim.new(0,8);local toggleAssignedBtn=Instance.new("TextButton",playerControl);toggleAssignedBtn.Size=UDim2.new(1,0,0,32);toggleAssignedBtn.Position=UDim2.new(0,0,0,132);toggleAssignedBtn.BackgroundColor3=Color3.fromRGB(100,100,100);toggleAssignedBtn.Text="Toggle Assigned Enabled";toggleAssignedBtn.Font=Enum.Font.GothamSemibold;Instance.new("UICorner",toggleAssignedBtn).CornerRadius=UDim.new(0,8);local assignedModeBtn=Instance.new("TextButton",playerControl);assignedModeBtn.Size=UDim2.new(1,0,0,32);assignedModeBtn.Position=UDim2.new(0,0,0,172);assignedModeBtn.BackgroundColor3=Color3.fromRGB(60,120,200);assignedModeBtn.Text="Cycle Mode";assignedModeBtn.Font=Enum.Font.GothamSemibold;Instance.new("UICorner",assignedModeBtn).CornerRadius=UDim.new(0,8);local asPSWalkLabel=Instance.new("TextLabel",playerControl);asPSWalkLabel.Size=UDim2.new(0.48,0,0,20);asPSWalkLabel.Position=UDim2.new(0,0,0,216);asPSWalkLabel.BackgroundTransparency=1;asPSWalkLabel.Font=Enum.Font.Gotham;asPSWalkLabel.TextSize=13;asPSWalkLabel.TextColor3=Color3.fromRGB(200,200,200);asPSWalkLabel.Text="PS Walk:";local asPSWalkBox=Instance.new("TextBox",playerControl);asPSWalkBox.Size=UDim2.new(0.48,0,0,20);asPSWalkBox.Position=UDim2.new(0.5,6,0,216);asPSWalkBox.BackgroundColor3=Color3.fromRGB(40,40,45);asPSWalkBox.TextColor3=Color3.fromRGB(220,220,220);asPSWalkBox.Font=Enum.Font.Gotham;asPSWalkBox.TextSize=13;asPSWalkBox.ClearTextOnFocus=false;asPSWalkBox.Text="";local asPSJumpLabel=Instance.new("TextLabel",playerControl);asPSJumpLabel.Size=UDim2.new(0.48,0,0,20);asPSJumpLabel.Position=UDim2.new(0,0,0,244);asPSJumpLabel.BackgroundTransparency=1;asPSJumpLabel.Font=Enum.Font.Gotham;asPSJumpLabel.TextSize=13;asPSJumpLabel.TextColor3=Color3.fromRGB(200,200,200);asPSJumpLabel.Text="PS Jump:";local asPSJumpBox=Instance.new("TextBox",playerControl);asPSJumpBox.Size=UDim2.new(0.48,0,0,20);asPSJumpBox.Position=UDim2.new(0.5,6,0,244);asPSJumpBox.BackgroundColor3=Color3.fromRGB(40,40,45);asPSJumpBox.TextColor3=Color3.fromRGB(220,220,220);asPSJumpBox.Font=Enum.Font.Gotham;asPSJumpBox.TextSize=13;asPSJumpBox.ClearTextOnFocus=false;asPSJumpBox.Text="";local incBtn=Instance.new("TextButton",playerControl);incBtn.Size=UDim2.new(0.48, -6,0,36);incBtn.Position=UDim2.new(0,0,0,276);incBtn.BackgroundColor3=Color3.fromRGB(60,120,200);incBtn.Text="+ Radius";incBtn.Font=Enum.Font.GothamSemibold;Instance.new("UICorner",incBtn).CornerRadius=UDim.new(0,8);local decBtn=Instance.new("TextButton",playerControl);decBtn.Size=UDim2.new(0.48, -6,0,36);decBtn.Position=UDim2.new(0.52,6,0,276);decBtn.BackgroundColor3=Color3.fromRGB(160,100,40);decBtn.Text="- Radius";decBtn.Font=Enum.Font.GothamSemibold;Instance.new("UICorner",decBtn).CornerRadius=UDim.new(0,8);local assignedRadiusLabel=Instance.new("TextLabel",playerControl);assignedRadiusLabel.Size=UDim2.new(1,0,0,20);assignedRadiusLabel.Position=UDim2.new(0,0,0,320);assignedRadiusLabel.BackgroundTransparency=1;assignedRadiusLabel.Font=Enum.Font.Gotham;assignedRadiusLabel.TextSize=13;assignedRadiusLabel.TextColor3=Color3.fromRGB(200,200,200);assignedRadiusLabel.Text="Assigned Radius: -";local playerButtons={};local selectedPlayer=nil;local function refreshPlayersList() for _,v in pairs(playerButtons) do if (v and v.Parent) then v:Destroy();end end playerButtons={};for _,pl in ipairs(Players:GetPlayers()) do if (pl~=LPlayer) then local btn=Instance.new("TextButton",playersList);btn.Size=UDim2.new(1, -12,0,40);btn.BackgroundColor3=Color3.fromRGB(48,50,56);btn.TextColor3=Color3.fromRGB(220,220,220);btn.Font=Enum.Font.Gotham;btn.TextSize=14;btn.Text=pl.Name;Instance.new("UICorner",btn).CornerRadius=UDim.new(0,6);btn.MouseButton1Click:Connect(function() selectedPlayer=pl;selLabel.Text="Selected: "   .. pl.Name ;assignedRadiusLabel.Text="Assigned Radius: "   .. ((AssignedAuras[pl] and tostring(AssignedAuras[pl].radius)) or "-") ;toggleAssignedBtn.Text=(AssignedAuras[pl] and ((AssignedAuras[pl].enabled and "Disable Assigned Aura") or "Enable Assigned Aura")) or "Give Aura" ;assignedModeBtn.Text=(AssignedAuras[pl] and ("Mode: "   .. AssignedAuras[pl].mode)) or "Mode: -" ;if AssignedAuras[pl] then asPSWalkBox.Text=tostring(AssignedAuras[pl].psWalk or "" );asPSJumpBox.Text=tostring(AssignedAuras[pl].psJump or "" );else asPSWalkBox.Text="";asPSJumpBox.Text="";end end);playerButtons[pl]=btn;end end playersList.CanvasSize=UDim2.new(0,0,0,playersLayout.AbsoluteContentSize.Y + 12 );end Players.PlayerAdded:Connect(refreshPlayersList);Players.PlayerRemoving:Connect(function(pl) if playerButtons[pl] then playerButtons[pl]:Destroy();playerButtons[pl]=nil;end refreshPlayersList();end);refreshPlayersList();homeTabBtn.MouseButton1Click:Connect(function() homePage.Visible=true;playersPage.Visible=false;end);playersTabBtn.MouseButton1Click:Connect(function() homePage.Visible=false;playersPage.Visible=true;end);toggleLocalBtn.MouseButton1Click:Connect(function() Enabled= not Enabled;toggleLocalBtn.Text=(Enabled and "Disable Local Aura") or "Enable Local Aura" ;lblStatus.Text=(Enabled and ("Local: ON — Mode: "   .. LocalMode)) or "Local: OFF" ;if Enabled then if LPlayer.Character then createLocalAura();end startChecking();else removeActiveEffect(LPlayer);destroyLocalAura();end end);local modes={"PUSH","PULL","PSpeed","KILL"};local function cycleMode(varMode) for i=1, #modes do if (modes[i]==varMode) then return modes[(i% #modes) + 1 ];end end return modes[1];end localModeBtn.MouseButton1Click:Connect(function() LocalMode=cycleMode(LocalMode);localModeBtn.Text="Mode: "   .. LocalMode ;lblStatus.Text=(Enabled and ("Local: ON — Mode: "   .. LocalMode)) or "Local: OFF" ;setLocalMode(LocalMode);end);radiusBox.FocusLost:Connect(function(enter) if enter then local v=tonumber(radiusBox.Text);if (v and (v>0)) then setLocalRadius(v);radiusBox.Text=tostring(LocalRadius);else radiusBox.Text=tostring(LocalRadius);end end end);psWalkBox.FocusLost:Connect(function(enter) if enter then local v=tonumber(psWalkBox.Text);if (v and (v>0)) then setLocalPSValues(v,LocalPS_JUMP);psWalkBox.Text=tostring(LocalPS_WALK);else psWalkBox.Text=tostring(LocalPS_WALK);end end end);psJumpBox.FocusLost:Connect(function(enter) if enter then local v=tonumber(psJumpBox.Text);if (v and (v>0)) then setLocalPSValues(LocalPS_WALK,v);psJumpBox.Text=tostring(LocalPS_JUMP);else psJumpBox.Text=tostring(LocalPS_JUMP);end end end);giveBtn.MouseButton1Click:Connect(function() if selectedPlayer then giveAuraToPlayer(selectedPlayer,LocalRadius,"PUSH",true,tonumber(asPSWalkBox.Text) or 8 ,tonumber(asPSJumpBox.Text) or 30 );assignedRadiusLabel.Text="Assigned Radius: "   .. tostring(AssignedAuras[selectedPlayer].radius) ;toggleAssignedBtn.Text="Disable Assigned Aura";assignedModeBtn.Text="Mode: "   .. AssignedAuras[selectedPlayer].mode ;end end);removeBtn.MouseButton1Click:Connect(function() if selectedPlayer then removeAssignedAura(selectedPlayer);assignedRadiusLabel.Text="Assigned Radius: -";toggleAssignedBtn.Text="Give Aura";assignedModeBtn.Text="Mode: -";asPSWalkBox.Text="";asPSJumpBox.Text="";end end);toggleAssignedBtn.MouseButton1Click:Connect(function() if  not selectedPlayer then return;end if  not AssignedAuras[selectedPlayer] then giveAuraToPlayer(selectedPlayer,LocalRadius,"PUSH",true,tonumber(asPSWalkBox.Text) or 8 ,tonumber(asPSJumpBox.Text) or 30 );toggleAssignedBtn.Text="Disable Assigned Aura";assignedModeBtn.Text="Mode: PUSH";assignedRadiusLabel.Text="Assigned Radius: "   .. tostring(LocalRadius) ;return;end AssignedAuras[selectedPlayer].enabled= not AssignedAuras[selectedPlayer].enabled;toggleAssignedBtn.Text=(AssignedAuras[selectedPlayer].enabled and "Disable Assigned Aura") or "Enable Assigned Aura" ;if  not AssignedAuras[selectedPlayer].enabled then local sKey="assigned_"   .. tostring(selectedPlayer.UserId) ;for t,ed in pairs(ActiveEffect) do if (ed and (ed.sourceKey==sKey)) then removeActiveEffect(t);end end end end);assignedModeBtn.MouseButton1Click:Connect(function() if ( not selectedPlayer or  not AssignedAuras[selectedPlayer]) then return;end AssignedAuras[selectedPlayer].mode=cycleMode(AssignedAuras[selectedPlayer].mode);assignedModeBtn.Text="Mode: "   .. AssignedAuras[selectedPlayer].mode ;local color=((AssignedAuras[selectedPlayer].mode=="PULL") and PULL_COLOR) or ((AssignedAuras[selectedPlayer].mode=="PSpeed") and PSPEED_COLOR) or ((AssignedAuras[selectedPlayer].mode=="KILL") and KILL_COLOR) or NORMAL_COLOR ;if (AssignedAuras[selectedPlayer].auraPart and AssignedAuras[selectedPlayer].auraPart.Parent) then updateAuraVisualColor(AssignedAuras[selectedPlayer].auraPart,color);end end);asPSWalkBox.FocusLost:Connect(function(enter) if ( not selectedPlayer or  not AssignedAuras[selectedPlayer]) then return;end if enter then local v=tonumber(asPSWalkBox.Text);if (v and (v>0)) then setAssignedPSValues(selectedPlayer,v,AssignedAuras[selectedPlayer].psJump);asPSWalkBox.Text=tostring(AssignedAuras[selectedPlayer].psWalk);else asPSWalkBox.Text=tostring(AssignedAuras[selectedPlayer].psWalk or "" );end end end);asPSJumpBox.FocusLost:Connect(function(enter) if ( not selectedPlayer or  not AssignedAuras[selectedPlayer]) then return;end if enter then local v=tonumber(asPSJumpBox.Text);if (v and (v>0)) then setAssignedPSValues(selectedPlayer,AssignedAuras[selectedPlayer].psWalk,v);asPSJumpBox.Text=tostring(AssignedAuras[selectedPlayer].psJump);else asPSJumpBox.Text=tostring(AssignedAuras[selectedPlayer].psJump or "" );end end end);incBtn.MouseButton1Click:Connect(function() if  not selectedPlayer then return;end if AssignedAuras[selectedPlayer] then AssignedAuras[selectedPlayer].radius=AssignedAuras[selectedPlayer].radius + 5 ;resizeAuraVisual(AssignedAuras[selectedPlayer].auraPart,AssignedAuras[selectedPlayer].radius);assignedRadiusLabel.Text="Assigned Radius: "   .. tostring(AssignedAuras[selectedPlayer].radius) ;else giveAuraToPlayer(selectedPlayer,LocalRadius + 5 ,"PUSH",true,tonumber(asPSWalkBox.Text) or 8 ,tonumber(asPSJumpBox.Text) or 30 );assignedRadiusLabel.Text="Assigned Radius: "   .. tostring(AssignedAuras[selectedPlayer].radius) ;toggleAssignedBtn.Text="Disable Assigned Aura";end end);decBtn.MouseButton1Click:Connect(function() if ( not selectedPlayer or  not AssignedAuras[selectedPlayer]) then return;end AssignedAuras[selectedPlayer].radius=math.max(1,AssignedAuras[selectedPlayer].radius-5 );resizeAuraVisual(AssignedAuras[selectedPlayer].auraPart,AssignedAuras[selectedPlayer].radius);assignedRadiusLabel.Text="Assigned Radius: "   .. tostring(AssignedAuras[selectedPlayer].radius) ;end);minimizeBtn.MouseButton1Click:Connect(function() frame.Visible=false;openBtn.Visible=true;end);openBtn.MouseButton1Click:Connect(function() openBtn.Visible=false;frame.Visible=true;RunService.Heartbeat:Wait();local absX=openBtn.AbsolutePosition.X;local absY=openBtn.AbsolutePosition.Y;local fw=frame.AbsoluteSize.X;local newX=absX-(fw/2) ;local newY=absY + openBtn.AbsoluteSize.Y + 8 ;frame.Position=UDim2.new(0,newX,0,newY);end);do local dragging,dragInput,dragStart,startPos;local function update(input) local delta=input.Position-dragStart ;frame.Position=UDim2.new(startPos.X.Scale,startPos.X.Offset + delta.X ,startPos.Y.Scale,startPos.Y.Offset + delta.Y );end titleBar.InputBegan:Connect(function(input) if ((input.UserInputType==Enum.UserInputType.MouseButton1) or (input.UserInputType==Enum.UserInputType.Touch)) then dragging=true;dragStart=input.Position;startPos=frame.Position;input.Changed:Connect(function() if (input.UserInputState==Enum.UserInputState.End) then dragging=false;end end);end end);titleBar.InputChanged:Connect(function(input) if ((input.UserInputType==Enum.UserInputType.MouseMovement) or (input.UserInputType==Enum.UserInputType.Touch)) then dragInput=input;end end);UserInputService.InputChanged:Connect(function(input) if (dragging and (input==dragInput)) then update(input);end end);local dragging2,dragInput2,dragStart2,startPos2;local function update2(input) local delta=input.Position-dragStart2 ;openBtn.Position=UDim2.new(startPos2.X.Scale,startPos2.X.Offset + delta.X ,startPos2.Y.Scale,startPos2.Y.Offset + delta.Y );end openBtn.InputBegan:Connect(function(input) if ((input.UserInputType==Enum.UserInputType.MouseButton1) or (input.UserInputType==Enum.UserInputType.Touch)) then dragging2=true;dragStart2=input.Position;startPos2=openBtn.Position;input.Changed:Connect(function() if (input.UserInputState==Enum.UserInputState.End) then dragging2=false;end end);end end);openBtn.InputChanged:Connect(function(input) if ((input.UserInputType==Enum.UserInputType.MouseMovement) or (input.UserInputType==Enum.UserInputType.Touch)) then dragInput2=input;end end);UserInputService.InputChanged:Connect(function(input) if (dragging2 and (input==dragInput2)) then update2(input);end end);end if Enabled then if LPlayer.Character then createLocalAura();end startChecking();end end
